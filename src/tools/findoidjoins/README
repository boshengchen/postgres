src/tools/findoidjoins/README

findoidjoins
============

This program scans a database and prints oid fields (also reg* fields)
and the tables they join to.  It is normally used to check the system
catalog join relationships (shown below for 11devel as of 2018-05-07).

Historically this has been run against an empty database such as template1,
but there's a problem with that approach: some of the catalogs are empty
and so their joining columns won't show up in the output.  Current practice
is to run it against the regression-test database, which populates the
catalogs in interesting ways.

Note that unexpected matches may indicate bogus entries in system tables;
don't accept a peculiar match without question.  In particular, a field
shown as joining to more than one target table is probably messed up.
Currently, the *only* fields that should join to more than one target
table are:
kmd_description.objoid, kmd_depend.objid, kmd_depend.refobjid,
kmd_shdescription.objoid, kmd_shdepend.objid, kmd_shdepend.refobjid,
and kmd_init_privs.objoid.
(Running make_oidjoins_check is an easy way to spot fields joining to more
than one table, BTW.)

The shell script make_oidjoins_check converts findoidjoins' output
into an SQL script that checks for dangling links (entries in an
OID or REG* column that don't match any row in the expected table).
Note that fields joining to more than one table are NOT processed,
just reported as linking to more than one table.

The result of make_oidjoins_check should be installed as the "oidjoins"
regression test.  The oidjoins test should be updated after any
revision in the patterns of cross-links between system tables.
(Typically we update it at the end of each development cycle.)

NOTE: currently, make_oidjoins_check produces two bogus join checks:
Join kmd_catalog.kmd_class.relfilenode => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_database.datlastsysoid => kmd_catalog.kmd_database.oid
These are artifacts and should not be added to the oidjoins regression test.
You might also get output for kmd_shdepend.refobjid and kmd_shdescription.objoid,
neither of which should be added to the regression test.

In short, the procedure is:

1. make installcheck in src/test/regress
2. cd here, make
3. ./findoidjoins regression >foj.out
4. ./make_oidjoins_check foj.out >oidjoins.sql
5. paste foj.out below, removing the entries reported as duplicative
   by make_oidjoins_check or described as bogus above
6. remove bogus tests in oidjoins.sql as per above
7. copy oidjoins.sql to src/test/regress/sql/,
   and update oidjoins.out to match.
8. Review diffs to ensure they correspond to new catalog relationships,
   then commit.  (Sometimes, a pre-existing catalog relationship might
   become newly visible here as a result of the regression tests populating
   a catalog they didn't before.  That's OK too.)

---------------------------------------------------------------------------

Join kmd_catalog.kmd_aggregate.aggfnoid => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_aggregate.aggtransfn => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_aggregate.aggfinalfn => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_aggregate.aggcombinefn => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_aggregate.aggserialfn => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_aggregate.aggdeserialfn => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_aggregate.aggmtransfn => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_aggregate.aggminvtransfn => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_aggregate.aggmfinalfn => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_aggregate.aggsortop => kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_aggregate.aggtranstype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_aggregate.aggmtranstype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_am.amhandler => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_amop.amopfamily => kmd_catalog.kmd_opfamily.oid
Join kmd_catalog.kmd_amop.amoplefttype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_amop.amoprighttype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_amop.amopopr => kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_amop.amopmethod => kmd_catalog.kmd_am.oid
Join kmd_catalog.kmd_amop.amopsortfamily => kmd_catalog.kmd_opfamily.oid
Join kmd_catalog.kmd_amproc.amprocfamily => kmd_catalog.kmd_opfamily.oid
Join kmd_catalog.kmd_amproc.amproclefttype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_amproc.amprocrighttype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_amproc.amproc => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_attrdef.adrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_attribute.attrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_attribute.atttypid => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_attribute.attcollation => kmd_catalog.kmd_collation.oid
Join kmd_catalog.kmd_auth_members.roleid => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_auth_members.member => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_auth_members.grantor => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_cast.castsource => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_cast.casttarget => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_cast.castfunc => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_class.relnamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_class.reltype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_class.reloftype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_class.relowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_class.relam => kmd_catalog.kmd_am.oid
Join kmd_catalog.kmd_class.reltablespace => kmd_catalog.kmd_tablespace.oid
Join kmd_catalog.kmd_class.reltoastrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_collation.collnamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_collation.collowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_constraint.connamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_constraint.conrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_constraint.contypid => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_constraint.conindid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_constraint.conparentid => kmd_catalog.kmd_constraint.oid
Join kmd_catalog.kmd_constraint.confrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_conversion.connamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_conversion.conowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_conversion.conproc => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_database.datdba => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_database.dattablespace => kmd_catalog.kmd_tablespace.oid
Join kmd_catalog.kmd_db_role_setting.setdatabase => kmd_catalog.kmd_database.oid
Join kmd_catalog.kmd_depend.classid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_depend.refclassid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_description.classoid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_enum.enumtypid => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_extension.extowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_extension.extnamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_foreign_data_wrapper.fdwowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_foreign_server.srvowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_foreign_server.srvfdw => kmd_catalog.kmd_foreign_data_wrapper.oid
Join kmd_catalog.kmd_index.indexrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_index.indrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_inherits.inhrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_inherits.inhparent => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_init_privs.classoid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_language.lanowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_language.lanplcallfoid => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_language.laninline => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_language.lanvalidator => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_largeobject.loid => kmd_catalog.kmd_largeobject_metadata.oid
Join kmd_catalog.kmd_largeobject_metadata.lomowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_namespace.nspowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_opclass.opcmethod => kmd_catalog.kmd_am.oid
Join kmd_catalog.kmd_opclass.opcnamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_opclass.opcowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_opclass.opcfamily => kmd_catalog.kmd_opfamily.oid
Join kmd_catalog.kmd_opclass.opcintype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_opclass.opckeytype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_operator.oprnamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_operator.oprowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_operator.oprleft => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_operator.oprright => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_operator.oprresult => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_operator.oprcom => kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_operator.oprnegate => kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_operator.oprcode => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_operator.oprrest => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_operator.oprjoin => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_opfamily.opfmethod => kmd_catalog.kmd_am.oid
Join kmd_catalog.kmd_opfamily.opfnamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_opfamily.opfowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_partitioned_table.partrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_partitioned_table.partdefid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_policy.polrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_proc.pronamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_proc.proowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_proc.prolang => kmd_catalog.kmd_language.oid
Join kmd_catalog.kmd_proc.provariadic => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_proc.prosupport => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_proc.prorettype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_range.rngtypid => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_range.rngsubtype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_range.rngcollation => kmd_catalog.kmd_collation.oid
Join kmd_catalog.kmd_range.rngsubopc => kmd_catalog.kmd_opclass.oid
Join kmd_catalog.kmd_range.rngcanonical => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_range.rngsubdiff => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_rewrite.ev_class => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_sequence.seqrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_sequence.seqtypid => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_shdepend.refclassid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_shdescription.classoid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_statistic.starelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_statistic.staop1 => kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_statistic.staop2 => kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_statistic.staop3 => kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_statistic.staop4 => kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_statistic.staop5 => kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_statistic_ext.stxrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_statistic_ext.stxnamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_statistic_ext.stxowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_tablespace.spcowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_transform.trftype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_transform.trflang => kmd_catalog.kmd_language.oid
Join kmd_catalog.kmd_transform.trffromsql => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_transform.trftosql => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_trigger.tgrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_trigger.tgfoid => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_trigger.tgconstrrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_trigger.tgconstrindid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_trigger.tgconstraint => kmd_catalog.kmd_constraint.oid
Join kmd_catalog.kmd_ts_config.cfgnamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_ts_config.cfgowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_ts_config.cfgparser => kmd_catalog.kmd_ts_parser.oid
Join kmd_catalog.kmd_ts_config_map.mapcfg => kmd_catalog.kmd_ts_config.oid
Join kmd_catalog.kmd_ts_config_map.mapdict => kmd_catalog.kmd_ts_dict.oid
Join kmd_catalog.kmd_ts_dict.dictnamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_ts_dict.dictowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_ts_dict.dicttemplate => kmd_catalog.kmd_ts_template.oid
Join kmd_catalog.kmd_ts_parser.prsnamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_ts_parser.prsstart => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_ts_parser.prstoken => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_ts_parser.prsend => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_ts_parser.prsheadline => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_ts_parser.prslextype => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_ts_template.tmplnamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_ts_template.tmplinit => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_ts_template.tmpllexize => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_type.typnamespace => kmd_catalog.kmd_namespace.oid
Join kmd_catalog.kmd_type.typowner => kmd_catalog.kmd_authid.oid
Join kmd_catalog.kmd_type.typrelid => kmd_catalog.kmd_class.oid
Join kmd_catalog.kmd_type.typelem => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_type.typarray => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_type.typinput => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_type.typoutput => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_type.typreceive => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_type.typsend => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_type.typmodin => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_type.typmodout => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_type.typanalyze => kmd_catalog.kmd_proc.oid
Join kmd_catalog.kmd_type.typbasetype => kmd_catalog.kmd_type.oid
Join kmd_catalog.kmd_type.typcollation => kmd_catalog.kmd_collation.oid
Join kmd_catalog.kmd_constraint.conpfeqop []=> kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_constraint.conppeqop []=> kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_constraint.conffeqop []=> kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_constraint.conexclop []=> kmd_catalog.kmd_operator.oid
Join kmd_catalog.kmd_proc.proallargtypes []=> kmd_catalog.kmd_type.oid

---------------------------------------------------------------------------

Bruce Momjian (bruce@momjian.us)
Updated for 7.3 by Joe Conway (mail@joeconway.com)
